{"ast":null,"code":"var _jsxFileName = \"D:\\\\React.js\\\\01-starting-setup\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\DisplayExpense.js\",\n  _s = $RefreshSig$();\nimport ExpenseItem from \"./Expenseltem\";\nimport \"./DisplayExpense.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DisplayExpense(props) {\n  _s();\n  const [filterYear, setFilterYear] = useState(\"2020\");\n  const filterChangedHandler = selectedYear => {\n    setFilterYear(selectedYear);\n    // console.log(\"Expected Year!\");\n    // console.log(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filterYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filterYear,\n        onchangefilter: filterChangedHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No expenses found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 43\n      }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense =>\n      /*#__PURE__*/\n      // always add key when mapping out list of items\n      _jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(DisplayExpense, \"6isFWgJBMljtaGD2YFjmwn31loo=\");\n_c = DisplayExpense;\nexport default DisplayExpense;\nvar _c;\n$RefreshReg$(_c, \"DisplayExpense\");","map":{"version":3,"names":["ExpenseItem","Card","ExpensesFilter","useState","DisplayExpense","props","filterYear","setFilterYear","filterChangedHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","length","map","title","amount","id"],"sources":["D:/React.js/01-starting-setup/01-starting-setup/src/components/Expenses/DisplayExpense.js"],"sourcesContent":["import ExpenseItem from \"./Expenseltem\";\r\nimport \"./DisplayExpense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport { useState } from \"react\";\r\nfunction DisplayExpense(props) {\r\n  const [filterYear, setFilterYear] = useState(\"2020\");\r\n  const filterChangedHandler = (selectedYear) => {\r\n    setFilterYear(selectedYear);\r\n    // console.log(\"Expected Year!\");\r\n    // console.log(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filterYear;\r\n  });\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        {/* Filter */}\r\n        <ExpensesFilter\r\n          selected={filterYear}\r\n          onchangefilter={filterChangedHandler}\r\n        />\r\n\r\n        {/* List of items */}\r\n        {filteredExpenses.length === 0 && <p>No expenses found.</p>}\r\n        {filteredExpenses.length > 0 &&\r\n          filteredExpenses.map((expense) => (\r\n            // always add key when mapping out list of items\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))}\r\n        {/* {filteredExpenses.length === 0 ? (\r\n          <p>No expenses found.</p>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            // always add key when mapping out list of items\r\n            <ExpenseItem\r\n              key={expense.id}\r\n              title={expense.title}\r\n              amount={expense.amount}\r\n              date={expense.date}\r\n            />\r\n          ))\r\n        )} */}\r\n\r\n        {/* <ExpenseItem\r\n          title={props.expenses[0].title}\r\n          amount={props.expenses[0].amount}\r\n          date={props.expenses[0].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.expenses[1].title}\r\n          amount={props.expenses[1].amount}\r\n          date={props.expenses[1].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.expenses[2].title}\r\n          amount={props.expenses[2].amount}\r\n          date={props.expenses[2].date}\r\n        ></ExpenseItem>\r\n        <ExpenseItem\r\n          title={props.expenses[3].title}\r\n          amount={props.expenses[3].amount}\r\n          date={props.expenses[3].date}\r\n        ></ExpenseItem> */}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default DisplayExpense;\r\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AACjC,SAASC,cAAc,CAACC,KAAK,EAAE;EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAMK,oBAAoB,GAAIC,YAAY,IAAK;IAC7CF,aAAa,CAACE,YAAY,CAAC;IAC3B;IACA;EACF,CAAC;;EAED,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,CAAEC,OAAO,IAAK;IACvD,OAAOA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,UAAU;EAC7D,CAAC,CAAC;EACF,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBAExB,QAAC,cAAc;QACb,QAAQ,EAAEA,UAAW;QACrB,cAAc,EAAEE;MAAqB;QAAA;QAAA;QAAA;MAAA,QACrC,EAGDE,gBAAgB,CAACO,MAAM,KAAK,CAAC,iBAAI;QAAA,UAAG;MAAkB;QAAA;QAAA;QAAA;MAAA,QAAI,EAC1DP,gBAAgB,CAACO,MAAM,GAAG,CAAC,IAC1BP,gBAAgB,CAACQ,GAAG,CAAEL,OAAO;MAAA;MAC3B;MACA,QAAC,WAAW;QAEV,KAAK,EAAEA,OAAO,CAACM,KAAM;QACrB,MAAM,EAAEN,OAAO,CAACO,MAAO;QACvB,IAAI,EAAEP,OAAO,CAACC;MAAK,GAHdD,OAAO,CAACQ,EAAE;QAAA;QAAA;QAAA;MAAA,QAKlB,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAmCC;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GArEQjB,cAAc;AAAA,KAAdA,cAAc;AAsEvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}